var __awaiter=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function c(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}l((r=r.apply(e,t||[])).next())}))};import{Logger}from"./Logger.js";import{PreCiseException}from"./PreCiseException.js";export class FileHelper{static asyncGetUtcDateFromContents(e){return __awaiter(this,void 0,void 0,(function*(){Logger.log(Logger.LogLevel.INFO,FileHelper,FileHelper.asyncGetUtcDateFromContents);let t=null;try{const n="publish details file";if(!e)throw new PreCiseException(`file name path to ${n} is null or empty.`);const r=yield fetch(e);if(!r.ok)throw new PreCiseException(`failed to fetch ${n}.`);const o=yield r.text();if(!o)throw new PreCiseException(`file contents of ${e} is null or empty.`);const i=o.trim();if(t=new Date(i),isNaN(t.getTime()))throw new PreCiseException(`${n} contents contain an invalid ISO UTC datetime. \n                    Example: "2025-03-07T15:00:00+00:00" (YYYY-MM-DDTHH:MM:SS+00:00).`)}catch(e){t=null,e instanceof Error?Logger.error(Logger.LogLevel.WARN,FileHelper,FileHelper.asyncGetUtcDateFromContents,e):console.error("Caught Unknown Error",e)}return t}))}static asyncGetParticipantsFromContents(e){return __awaiter(this,void 0,void 0,(function*(){Logger.log(Logger.LogLevel.INFO,FileHelper,FileHelper.asyncGetParticipantsFromContents);let t=null;try{const n="participants file";if(!e)throw new PreCiseException(`file name path to ${n} is null or empty.`);const r=yield fetch(e);if(!r.ok)throw new PreCiseException(`failed to fetch ${n}.`);const o=yield r.text();if(!o)throw new PreCiseException(`file contents of ${e} is null or empty.`);const i=o.split("\n").map((e=>e.trim().replace(/^[^a-zA-Z]+/,"").replace(/[^a-zA-Z\s]+$/,"").replace(/\s+/g," ").trim())).filter((e=>e.length>0));if(t=Array.from(new Map(i.map((e=>[e.toLowerCase(),e]))).values()),!t)throw new PreCiseException(`${n} contains invalid name(s). \n                    Ensure that each name consists only of alphabetic characters and spaces separated by newline character.`)}catch(e){t=null,e instanceof Error?Logger.error(Logger.LogLevel.WARN,FileHelper,FileHelper.asyncGetParticipantsFromContents,e):console.error("Caught Unknown Error",e)}return t}))}}