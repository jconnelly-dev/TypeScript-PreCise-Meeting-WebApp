import{Logger}from"./Logger.js";export class Randomizer{static getRandomGenerator(e){const o=Math.pow(2,32);let g=e;return()=>(g=(1664525*g+1013904223)%o,g/o)}static getRandomAssignments(e,o){Logger.log(Logger.LogLevel.TEST,Randomizer,Randomizer.getRandomAssignments);let g=new Array;if(!e)return g;let n=[...e];Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`before do/while -> picked.length = ${n.length}`);do{const e=0,r=n.length;Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`inclusiveLower = ${e}`),Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`exclusiveUpper = ${r}`);const t=o(),s=Math.floor(t*(r-e))+e;Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`random = ${t}`),Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`upNext = ${s}`),(s<0||s>=n.length)&&Logger.log(Logger.LogLevel.INFO,Randomizer,Randomizer.getRandomAssignments,`Warning: failed to generate a valid random next person: \n                    inclusiveLower = ${e}, exclusiveUpper = ${r}, picked.length = ${n.length}, random = ${s}, upNext = ${s}`),g.push(n[s]),n.splice(s,1),Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`end of do/while -> assignments.length = ${g.length}`),Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getRandomAssignments,`end of do/while -> picked.length = ${n.length}`)}while(n.length>0);return g}static getUniqueFirstPersonGroups(e,o){Logger.log(Logger.LogLevel.TEST,Randomizer,Randomizer.getUniqueFirstPersonGroups);let g=new Array;if(!o)return g;const n=e.getFullYear(),r=this.getRandomGenerator(n);Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getUniqueFirstPersonGroups,`seed = ${n}`);let t=new Set(o);do{const e=this.getRandomAssignments(o,r);if(Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getUniqueFirstPersonGroups,`randomAssignments.length = ${e.length}`),e){const o=null==e?void 0:e[0];Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getUniqueFirstPersonGroups,`randomFirstPerson = ${o}`),o&&t.has(o)&&(Logger.log(Logger.LogLevel.DEBUG,Randomizer,Randomizer.getUniqueFirstPersonGroups,"$$$$$$$$$$ deleting random first person from first picks, and adding random assignments to group!!!"),t.delete(o),g.push(e))}}while(t.size>0);return g}}