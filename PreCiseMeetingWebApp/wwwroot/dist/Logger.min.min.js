import{PreCiseException}from"./PreCiseException.js";export class Logger{static setLogLevel(e){Logger.CURRENT_LEVEL=e}static log(e,o,g,L){if(Logger.LogLevelPriority[e]<Logger.LogLevelPriority[Logger.CURRENT_LEVEL])return;let r=this.getLogHeader(e,o,g);L&&(r+=` ${L}`),console.log(r)}static error(e,o,g,L){if(Logger.LogLevelPriority[e]<Logger.LogLevelPriority[Logger.CURRENT_LEVEL])return;let r=this.getLogHeader(e,o,g);if(L&&L.message){let e="",o="";L instanceof PreCiseException?e=this.nameof(PreCiseException):(e="Unexpected Error",L.stack&&(o=`${"undefined"==typeof window?"\r\n":"\n"}${L.stack}`)),r+=` ${e}: ${L.message}${o}`}console.log(r)}static getLogHeader(e,o,g){const L=new Date;let r="";return r="string"==typeof o?`${o}.`:`${this.nameof(o)}.`,`[${L}] [${e}] [${r}${this.nameof(g)}()]`}static nameof(e){return e.name}}Logger.LogLevel={TRACE:"TRACE",DEBUG:"DEBUG",TEST:"TEST",INFO:"INFO",PROD:"PROD",WARN:"WARN",ERROR:"ERROR",FATAL:"FATAL"},Logger.LogLevelPriority={[Logger.LogLevel.TRACE]:0,[Logger.LogLevel.DEBUG]:1,[Logger.LogLevel.TEST]:2,[Logger.LogLevel.INFO]:3,[Logger.LogLevel.PROD]:4,[Logger.LogLevel.WARN]:5,[Logger.LogLevel.ERROR]:6,[Logger.LogLevel.FATAL]:7},Logger.CURRENT_LEVEL=Logger.LogLevel.PROD;