import{Logger}from"./Logger.js";export const Days={Sunday:"Sunday",Monday:"Monday",Tuesday:"Tuesday",Wednesday:"Wednesday",Thursday:"Thursday",Friday:"Friday",Saturday:"Saturday"};export class DateHelper{static formatDateString(e,t={weekday:"long",year:"numeric",month:"long",day:"numeric"}){return Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.formatDateString),e.toLocaleDateString("en-US",t)}static convertUtcDateToLocal(e=new Date){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.convertUtcDateToLocal);const t=(new Date).getTimezoneOffset();return new Date(e.getTime()-6e4*t)}static getDayOfWeek(e){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.getDayOfWeek);const t=e.getDay();return Object.keys(Days)[t]}static getDayOfYear(e){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.getDayOfYear);const t=new Date(e.getFullYear(),0,0),a=e.getTime()-t.getTime();return Math.floor(a/this.MILLISECONDS_IN_ONE_DAY_IN)}static getDayOfWeekOfYear(e,t){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.getDayOfWeekOfYear);const a=Object.keys(Days).indexOf(t);if(e.getDay()!==a)return 0;const r=this.getDayOfYear(e);return Math.floor(r/this.DAYS_IN_WEEK)+1}static isLeapYear(e){return Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.isLeapYear),e%4==0&&e%100!=0||e%400==0}static getNumDaysInYear(e){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.getNumDaysInYear);const t=e.getFullYear();let a=this.NORMAL_DAYS_IN_YEAR;return this.isLeapYear(t)&&a++,a}static getNumWeeksInYear(e){Logger.log(Logger.LogLevel.TRACE,DateHelper,DateHelper.getNumWeeksInYear);const t=e.getFullYear(),a=this.isLeapYear(t),r=new Date(t,0,1),g=new Date(t,12,31),o=this.getDayOfWeek(r),D=this.getDayOfWeek(g),l=o===Days.Thursday||a&&D===Days.Wednesday;let s=this.NORMAL_WEEKS_IN_YEAR;return l&&s++,s}}DateHelper.DAYS_IN_WEEK=7,DateHelper.NORMAL_DAYS_IN_YEAR=365,DateHelper.NORMAL_WEEKS_IN_YEAR=52,DateHelper.MILLISECONDS_IN_ONE_DAY_IN=864e5;